spring.application.name=music-service-demo

# Spotify Client
spotify.clientid=6ae6a828555f480b8b8173376be39552
spotify.custom.server.ip=http://localhost:3000
spotify.redirect.server.ip=http://localhost:8080
spotify.client.base.url= https://api.spotify.com
spotify.client.get.track.path=/v1/tracks

# OAuth2 Client Configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=https://accounts.spotify.com
spring.security.oauth2.client.registration.springauth.client-id=6ae6a828555f480b8b8173376be39552
spring.security.oauth2.client.registration.springauth.client-secret=b5aa483ee0e8493f942dae63888102bf
spring.security.oauth2.client.registration.springauth.authorization-grant-type=client_credentials
spring.security.oauth2.client.registration.springauth.provider=springauth
spring.security.oauth2.client.provider.springauth.authorization-uri=https://accounts.spotify.com/authorize
spring.security.oauth2.client.provider.springauth.token-uri=https://accounts.spotify.com/api/token

# Datasource Configuration
spring.datasource.username=spotify
spring.datasource.password=Mvrt!1624
spring.datasource.url=jdbc:postgresql://localhost:5433/postgres
spring.jpa.database=postgresql
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect